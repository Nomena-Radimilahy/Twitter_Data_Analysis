knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
vader <- read.csv("C:/Users/nomen/Twitter_Data_Analysis/Sentiment_analysis/twitter_vader.csv", sep = ",", header = T, stringsAsFactors = T)
head(vader)
suppressPackageStartupMessages({
library(dplyr)
library(lubridate)
library("RColorBrewer") # color pallets
library("ggplot2") # reportable graphs
library(cowplot) # arranges ggplot graphs nicely
library(moments) # for calculating skeweness
library(scales) # to change the format of the scales on the axis
})
str(vader)
vader <- vader %>%
mutate(Sentiment = case_when(
compound > 0.05 ~ 1,
compound < -0.05 ~ -1,
TRUE ~ 0
))
# Reorganisiere der Spalten
vader <- vader %>%
relocate(Sentiment, .after = compound)
vader$Sentiment <- factor(vader$Sentiment,
levels = c(1, 0, -1),
labels = c("positiv", "neutral", "negativ"))
sentiment_cases <- ggplot(vader) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positiv" = "green4", "neutral" = "lightblue1", "negativ" = "red1")) +
labs(
x = "Sentiment",
y = "Anzahl")
# Berechnung der Prozentwerte
sentiment_summary <- as.data.frame(table(vader$Sentiment))
names(sentiment_summary) <- c("Sentiment", "Freq")
sentiment_summary$Percentage <- round((sentiment_summary$Freq / sum(sentiment_summary$Freq) * 100), 2)
# Add label position
sentiment_summary <- sentiment_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
farbe <- c("green4", "lightblue1", "red1" )
sentiment_pie <- ggplot(sentiment_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
theme_void()
plot_grid(sentiment_cases, sentiment_pie)
vader$UserVerified <- factor(vader$UserVerified,
levels = c(1,0),
labels = c("geprüftes Konto", "ungeprüftes Konto"))
sentiment_user <- ggplot(vader, aes(x = Sentiment, fill = UserVerified)) +
geom_bar(position = "dodge", width = 0.6) +
geom_text(stat='count', aes(group=UserVerified, label=after_stat(count)), vjust=-0.5, position=position_dodge(width=0.6)) +
scale_fill_manual(values = c("geprüftes Konto" = "dodgerblue4", "ungeprüftes Konto" = "coral")) +
labs(
x = "Sentiment",
y = "Anzahl",
fill = "User") + # Legende für "fill" benennen
theme(plot.title = element_text(color = "royalblue4", size = 12, face = "bold"),
plot.caption = element_text(face = "italic"))
sentiment_user
vader$CreatedAt <- as.Date(vader$CreatedAt, format = "%Y-%m-%d")
df_summary <- vader %>%
dplyr::group_by(CreatedAt, Sentiment) %>%
dplyr::summarise(Count = n(), .groups = 'drop')
ggplot(df_summary, aes(x = CreatedAt, y = Count, color = Sentiment, group = Sentiment)) +
geom_line() +
labs(x = "Datum", y = "Anzahl von Tweets") +
theme_minimal() +
scale_color_manual(values = c("negativ" = "red", "neutral" = "blue", "positiv" = "green4")) +
theme(legend.title = element_blank())
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
suppressPackageStartupMessages({
library(dplyr)
library(lubridate)
library("RColorBrewer") # color pallets
library("ggplot2") # reportable graphs
library(cowplot) # arranges ggplot graphs nicely
library(moments) # for calculating skeweness
library(scales) # to change the format of the scales on the axis
})
# reading in the data
twitter <- read.csv("C:/Users/nomen/Twitter_Data_Analysis/data/twitter_cleaned.csv", sep = ",", header = T, stringsAsFactors = T)
head(twitter)
str(twitter)
str(twitter)
# Fehlwerte nochmal checken
na_count <- sapply(twitter, function(x) sum(is.na(x)))
na_count
rows_with_na <- apply(twitter, 1, function(x) any(is.na(x)))
twitter[rows_with_na, ]
# Konvertieren der CreatedAt-Spalte in einen datetime-Typ
twitter$CreatedAt <- ymd_hms(twitter$CreatedAt)
# Gruppieren der Daten direkt nach Jahr und Monat und Zählen der Tweets pro Monat
tweets_per_month <- twitter %>%
group_by(YearMonth = floor_date(CreatedAt, "month")) %>%
summarise(Count = n())
# Balkendiagramm für die Kommentare pro Monat
ggplot(tweets_per_month, aes(x = YearMonth, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label=Count), vjust=-0.5, hjust=1.5) +
labs(title = "Überblick über die Tweets pro Monat",
x = "Monat",
y = "Anzahl der Tweets") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
vader <- read.csv("C:/Users/nomen/Twitter_Data_Analysis/Sentiment_analysis/twitter_vader.csv", sep = ",", header = T, stringsAsFactors = T)
head(vader)
str(vader)
vader <- read.csv("C:/Users/nomen/Twitter_Data_Analysis/Sentiment_analysis/twitter_vader.csv", sep = ",", header = T, stringsAsFactors = T)
head(vader)
str(vader)
vader <- vader %>%
mutate(Sentiment = case_when(
compound > 0.05 ~ 1,
compound < -0.05 ~ -1,
TRUE ~ 0
))
# Reorganisiere der Spalten
vader <- vader %>%
relocate(Sentiment, .after = compound)
# Write the data frame to a CSV file
write.csv(vader, file = "C:/Users/nomen/Twitter_Data_Analysis/Sentiment_analysis/vader_final.csv", row.names = FALSE)
vader$Sentiment <- factor(vader$Sentiment,
levels = c(1, 0, -1),
labels = c("positiv", "neutral", "negativ"))
sentiment_cases <- ggplot(vader) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positiv" = "green4", "neutral" = "lightblue1", "negativ" = "red1")) +
labs(title = "Sentiment zu ChatGPT auf Twitter",
x = "Sentiment",
y = "Anzahl")
# Berechnung der Prozentwerte
sentiment_summary <- as.data.frame(table(vader$Sentiment))
names(sentiment_summary) <- c("Sentiment", "Freq")
sentiment_summary$Percentage <- round((sentiment_summary$Freq / sum(sentiment_summary$Freq) * 100), 2)
# Add label position
sentiment_summary <- sentiment_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
farbe <- c("green4", "lightblue1", "red1" )
sentiment_pie <- ggplot(sentiment_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
ggtitle("Sentimentverteilung (%)") +
theme_void()
plot_grid(sentiment_cases, sentiment_pie)
vader$UserVerified <- factor(vader$UserVerified,
levels = c(1,0),
labels = c("geprüftes Konto", "ungeprüftes Konto"))
sentiment_user <- ggplot(vader, aes(x = Sentiment, fill = UserVerified)) +
geom_bar(position = "dodge", width = 0.6) +
geom_text(stat='count', aes(group=UserVerified, label=after_stat(count)), vjust=-0.5, position=position_dodge(width=0.6)) +
scale_fill_manual(values = c("geprüftes Konto" = "dodgerblue4", "ungeprüftes Konto" = "coral")) +
labs(title = "Sentimentverteilung pro user",
x = "Sentiment",
y = "Anzahl",
fill = "User") + # Legende für "fill" benennen
theme(plot.title = element_text(color = "royalblue4", size = 12, face = "bold"),
plot.caption = element_text(face = "italic"))
sentiment_user
# Konvertieren der CreatedAt-Spalte in einen datetime-Typ
vader$CreatedAt <- ymd_hms(vader$CreatedAt)
# Filtern der Tweets pro Monat
nov_tweets <- vader %>% filter(month(CreatedAt) == 11)
dec_tweets <- vader %>% filter(month(CreatedAt) == 12)
jan_tweets <- vader %>% filter(month(CreatedAt) == 01)
feb_tweets <- vader %>% filter(month(CreatedAt) == 02)
# Visualisierung
nov_bar <- ggplot(nov_tweets) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positive" = "green4", "neutral" = "lightblue1", "negative" = "red1")) +
labs(title = "Sentiments im November",
x = "Sentiment",
y = "Count")
dec_bar <- ggplot(dec_tweets) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positive" = "green4", "neutral" = "lightblue1", "negative" = "red1")) +
labs(title = "Sentiments im Dezember",
x = "Sentiment",
y = "Count")
jan_bar <- ggplot(jan_tweets) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positive" = "green4", "neutral" = "lightblue1", "negative" = "red1")) +
labs(title = "Sentiments im Januar",
x = "Sentiment",
y = "Count")
feb_bar <- ggplot(feb_tweets) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positive" = "green4", "neutral" = "lightblue1", "negative" = "red1")) +
labs(title = "Sentiments im Februar",
x = "Sentiment",
y = "Count")
# Berechnung der Prozentwerte
nov_summary <- as.data.frame(table(nov_tweets$Sentiment))
names(nov_summary) <- c("Sentiment", "Freq")
nov_summary$Percentage <- round((nov_summary$Freq / sum(nov_summary$Freq) * 100), 2)
dec_summary <- as.data.frame(table(dec_tweets$Sentiment))
names(dec_summary) <- c("Sentiment", "Freq")
dec_summary$Percentage <- round((dec_summary$Freq / sum(dec_summary$Freq) * 100), 2)
jan_summary <- as.data.frame(table(jan_tweets$Sentiment))
names(jan_summary) <- c("Sentiment", "Freq")
jan_summary$Percentage <- round((jan_summary$Freq / sum(jan_summary$Freq) * 100), 2)
feb_summary <- as.data.frame(table(feb_tweets$Sentiment))
names(feb_summary) <- c("Sentiment", "Freq")
feb_summary$Percentage <- round((feb_summary$Freq / sum(feb_summary$Freq) * 100), 2)
# label position berechnen (lab.percentage)
nov_summary <- nov_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
dec_summary <- dec_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
jan_summary <- jan_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
feb_summary <- feb_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
november_pie <- ggplot(nov_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
ggtitle("Sentimentverteilung (%)") +
theme_void()
december_pie <- ggplot(dec_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
ggtitle("Sentimentverteilung (%)") +
theme_void()
januar_pie <- ggplot(jan_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
ggtitle("Sentimentverteilung (%)") +
theme_void()
februar_pie <- ggplot(feb_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
ggtitle("Sentimentverteilung (%)") +
theme_void()
plot_grid(nov_bar, november_pie)
plot_grid(dec_bar, december_pie)
plot_grid(jan_bar, januar_pie)
vader$CreatedAt <- as.Date(vader$CreatedAt, format = "%Y-%m-%d")
df_summary <- vader %>%
dplyr::group_by(CreatedAt, Sentiment) %>%
dplyr::summarise(Count = n(), .groups = 'drop')
ggplot(df_summary, aes(x = CreatedAt, y = Count, color = Sentiment, group = Sentiment)) +
geom_line() +
labs(x = "Datum", y = "Anzahl von Tweets", title = "Sentimententwicklung zu ChatGPT über die Zeit") +
theme_minimal() +
scale_color_manual(values = c("negativ" = "red", "neutral" = "blue", "positiv" = "green4")) +
theme(legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"))
vader$CreatedAt <- as.Date(vader$CreatedAt, format = "%Y-%m-%d")
df_summary <- vader %>%
dplyr::group_by(CreatedAt, Sentiment) %>%
dplyr::summarise(Count = n(), .groups = 'drop')
ggplot(df_summary, aes(x = CreatedAt, y = Count, color = Sentiment, group = Sentiment)) +
geom_line() +
labs(x = "Datum", y = "Anzahl von Tweets", title = "Sentimententwicklung zu ChatGPT über die Zeit") +
theme_minimal() +
scale_color_manual(values = c("negativ" = "red", "neutral" = "blue", "positiv" = "green4")) +
theme(legend.title = element_blank())
vader$Sentiment <- factor(vader$Sentiment,
levels = c(1, 0, -1),
labels = c("positiv", "neutral", "negativ"))
sentiment_cases <- ggplot(vader) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positiv" = "green4", "neutral" = "lightblue1", "negativ" = "red1")) +
labs(x = "Sentiment",
y = "Anzahl")
# Berechnung der Prozentwerte
sentiment_summary <- as.data.frame(table(vader$Sentiment))
names(sentiment_summary) <- c("Sentiment", "Freq")
sentiment_summary$Percentage <- round((sentiment_summary$Freq / sum(sentiment_summary$Freq) * 100), 2)
# Add label position
sentiment_summary <- sentiment_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
farbe <- c("green4", "lightblue1", "red1" )
sentiment_pie <- ggplot(sentiment_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
theme_void()
plot_grid(sentiment_cases, sentiment_pie)
vader <- read.csv("C:/Users/nomen/Twitter_Data_Analysis/Sentiment_analysis/twitter_vader.csv", sep = ",", header = T, stringsAsFactors = T)
head(vader)
str(vader)
vader <- vader %>%
mutate(Sentiment = case_when(
compound > 0.05 ~ 1,
compound < -0.05 ~ -1,
TRUE ~ 0
))
# Reorganisiere der Spalten
vader <- vader %>%
relocate(Sentiment, .after = compound)
# Write the data frame to a CSV file
write.csv(vader, file = "C:/Users/nomen/Twitter_Data_Analysis/Sentiment_analysis/vader_final.csv", row.names = FALSE)
vader$Sentiment <- factor(vader$Sentiment,
levels = c(1, 0, -1),
labels = c("positiv", "neutral", "negativ"))
sentiment_cases <- ggplot(vader) +
geom_bar(aes(x = Sentiment, fill = Sentiment)) +
geom_text(stat='count', aes(x=Sentiment, y=after_stat(count), label=after_stat(count)), vjust=-0.5) +
scale_fill_manual(values = c("positiv" = "green4", "neutral" = "lightblue1", "negativ" = "red1")) +
labs(x = "Sentiment",
y = "Anzahl")
# Berechnung der Prozentwerte
sentiment_summary <- as.data.frame(table(vader$Sentiment))
names(sentiment_summary) <- c("Sentiment", "Freq")
sentiment_summary$Percentage <- round((sentiment_summary$Freq / sum(sentiment_summary$Freq) * 100), 2)
# Add label position
sentiment_summary <- sentiment_summary %>%
arrange(desc(Sentiment)) %>%
mutate(lab.Percentage = cumsum(Freq) - 0.5*Freq)
farbe <- c("green4", "lightblue1", "red1" )
sentiment_pie <- ggplot(sentiment_summary, aes(x = "", y = Freq, fill = Sentiment)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.Percentage, label = Percentage), color = "white")+
scale_fill_manual(values = farbe) +
theme_void()
plot_grid(sentiment_cases, sentiment_pie)
vader$UserVerified <- factor(vader$UserVerified,
levels = c(1,0),
labels = c("geprüftes Konto", "ungeprüftes Konto"))
sentiment_user <- ggplot(vader, aes(x = Sentiment, fill = UserVerified)) +
geom_bar(position = "dodge", width = 0.6) +
geom_text(stat='count', aes(group=UserVerified, label=after_stat(count)), vjust=-0.5, position=position_dodge(width=0.6)) +
scale_fill_manual(values = c("geprüftes Konto" = "dodgerblue4", "ungeprüftes Konto" = "coral")) +
labs(x = "Sentiment",
y = "Anzahl",
fill = "User") + # Legende für "fill" benennen
theme(plot.title = element_text(color = "royalblue4", size = 12, face = "bold"),
plot.caption = element_text(face = "italic"))
sentiment_user
